package com.example.android_malware_detection.activity;

import android.app.Activity;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.Signature;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.animation.Animation;
import android.view.animation.RotateAnimation;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;

import com.example.android_malware_detection.R;
import com.example.android_malware_detection.engine.virusDao;
import com.example.android_malware_detection.util.MD5Utils;

import java.security.MessageDigest;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

/**
 * Created by Administrator on 2018/5/7.
 */

public class DetectorActivity extends Activity {
    //private  RotateAnimation rotateAnimation;
    private List<ScanInfo> mVirusScanInfoList;
    protected static final int SCANING = 100;
    private static final int SCANING_FINISH = 101;
    private ImageView iv_scan;
    private TextView tv_name;
    private ProgressBar pb_bar;
    private LinearLayout ll_add_next;
    private int index = 0;
    private Handler mHandler = new Handler(){
        public  void handleMessage(android.os.Message msg){
            switch (msg.what){
                case SCANING:
                    ScanInfo info = ((ScanInfo)msg.obj);
                    tv_name.setText(info.name);
                    TextView textView = new TextView(getApplicationContext());
                    if(info.isVirus){
                        textView.setTextColor(Color.RED);
                        textView.setText("发现恶意软件" + info.name);
                    }else{
                        textView.setTextColor(Color.BLACK);
                        textView.setText("扫描安全" + info.name);
                    }
                    ll_add_next.addView(textView,0);
                    break;
                case SCANING_FINISH:
                    tv_name.setText("扫描完成");
                    iv_scan.clearAnimation();
                    uninstallVirus();
                    break;
            }
        }
    };
    protected  void uninstallVirus(){
        for(ScanInfo scanInfo:mVirusScanInfoList){
            String packageName = scanInfo.packageName;
            Intent intent = new Intent("android.intent.action.DELETE");
            intent.addCategory("android.intent.category.DEFAULT");
            intent.setData(Uri.parse("Package:" + packageName));
            startActivity(intent);
        }
    }
    @Override
    protected void onCreate(Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_detector);
        initUI();
        initAnimation();
        checkVirus();
    }
    private  void checkVirus(){
        new Thread(){
            public void run(){
                List<String> virusList = virusDao.getVirusList();
                PackageManager pm = getPackageManager();
                List<PackageInfo> packageInfoList = pm.getInstalledPackages(PackageManager.GET_SIGNATURES + PackageManager.GET_UNINSTALLED_PACKAGES);
               // mVirusScanInfoList = new ArrayList<ScanInfo>();
                List<ScanInfo> scanInfoList = new ArrayList<ScanInfo>();
                pb_bar.setMax(packageInfoList.size());
                for(PackageInfo packageInfo : packageInfoList){
                    ScanInfo scanInfo = new ScanInfo();
                    Signature[] signatures = packageInfo.signatures;
                    Signature signature = signatures[0];
                    String string = signature.toCharsString();
                    String encode = MD5Utils.encoder(string);
                    if(virusList.contains(encode)){
                        scanInfo.isVirus = true;
                        mVirusScanInfoList.add(scanInfo);
                    }else{
                        scanInfo.isVirus = false;
                    }
                    scanInfo.packageName = packageInfo.packageName;
                    scanInfo.name = packageInfo.applicationInfo.loadLabel(pm).toString();
                    scanInfoList.add(scanInfo);
                    index++;
                    pb_bar.setProgress(index);
                    try{
                        Thread.sleep(50 + new Random().nextInt(100));
                    }catch (InterruptedException e){
                        e.printStackTrace();
                    }
                    Message msg = Message.obtain();
                    msg.what = SCANING;
                    msg.obj = scanInfo;
                    mHandler.sendMessage(msg);

                }
                Message msg = Message.obtain();
                msg.what = SCANING_FINISH;
                mHandler.sendMessage(msg);
            }
        }.start();

    }
    class ScanInfo{
        public boolean isVirus;
        public String packageName;
        public String name;
    }
    private void initUI(){
        iv_scan = (ImageView)findViewById(R.id.iv_scan);
        tv_name = (TextView)findViewById(R.id.tv_name);
        pb_bar = (ProgressBar)findViewById(R.id.pb_bar);
        ll_add_next = (LinearLayout)findViewById(R.id.ll_add_text);

    }
    private void initAnimation(){
        RotateAnimation rotateAnimation = new RotateAnimation(0,360,
                Animation.RELATIVE_TO_SELF,0.5f,
                Animation.RELATIVE_TO_SELF,0.5f);
        rotateAnimation.setDuration(1000);
        //rotateAnimation.setRepeatMode(RotateAnimation.INFINITE);
        rotateAnimation.setRepeatCount(RotateAnimation.INFINITE);
        rotateAnimation.setFillAfter(true);
        iv_scan.startAnimation(rotateAnimation);
    }
}
